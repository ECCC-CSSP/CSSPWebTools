@using CSSPWebTools.Views.Document.Resources;
@using CSSPWebTools.Controllers;
@using CSSPEnumsDLL.Enums;
@using CSSPEnumsDLL.Services;
@using CSSPModelsDLL.Models;

@{
    DocumentController documentController = (DocumentController)ViewBag.DocumentController;
    int ReportTypeID = (int)ViewBag.ReportTypeID;
    int TVItemID = (int)ViewBag.TVItemID;
    int TVFileTVItemID = (int)ViewBag.TVFileTVItemID;
    ReportTypeModel reportTypeModel = (ReportTypeModel)ViewBag.ReportTypeModel;
}

@if (TVFileTVItemID == 0)
{
    <ul class="GenerateReportTopDiv BorderOtherInfrastructure list-unstyled">
        <li>
            <form class="GenerateReport" method="post" role="form" action="Document/DocumentGenerateJSON">
                @Html.AntiForgeryToken()
                <fieldset>
                    <legend><span>@DocumentViewRes.Parameters</span></legend>
                    <input type="hidden" name="TVItemID" value="@TVItemID" />
                    <input type="hidden" name="ReportTypeID" value="@ReportTypeID" />
                    @Parameters(reportTypeModel.UniqueCode)
                    @if (reportTypeModel.UniqueCode != "SubsectorMunicipalityDocx")
                    {
                        <div class="form-group">
                            <button class="jbDocumentGenerate btn btn-primary" type="submit">
                                <span class="glyphicon glyphicon-check"></span>
                                &nbsp;@DocumentViewRes.GenerateReportWithParameters
                            </button>
                        </div>
                    }
                </fieldset>
            </form>
        </li>
    </ul>
}
else
{
    <ul class="list-unstyled">
        <li>
            @Parameters(reportTypeModel.UniqueCode)
        </li>
    </ul>
}

@helper Parameters(string UniqueCode)
    {
        switch (UniqueCode)
        {
            case "FCSummaryStatDocx":
                {
                    <div class="form-inline">
                        <label class="text-nowrap">
                            <span>@DocumentViewRes.ReportYear</span>
                            <select name="Year" class="form-control">
                                @for (int i = DateTime.Now.Year; i > 1989; i--)
                                {
                                    <option value="@i">@i.ToString()</option>
                                }
                            </select>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                        </label>
                        <label class="text-nowrap">
                            <input type="checkbox" name="HideAllAllAll" />
                            <span>&nbsp;&nbsp;@DocumentViewRes.HideAllAllAll &nbsp;&nbsp;</span>
                        </label>
                        <label class="text-nowrap">
                            <input type="checkbox" name="HideWetAllAll" />
                            <span>&nbsp;&nbsp;@DocumentViewRes.HideWetAllAll &nbsp;&nbsp;</span>
                        </label>
                        <label class="text-nowrap">
                            <input type="checkbox" name="HideDryAllAll" />
                            <span>&nbsp;&nbsp;@DocumentViewRes.HideDryAllAll &nbsp;&nbsp;</span>
                        </label>
                        <label class="text-nowrap">
                            <input type="checkbox" name="HideMaxFCColumn" />
                            <span>&nbsp;&nbsp;@DocumentViewRes.HideMaxFCColumn &nbsp;&nbsp;</span>
                        </label>
                    </div>
                }
                break;
            case "ReEvaluationDocx":
                {
                    <div class="form-inline">
                        <label class="text-nowrap">
                            <span>@DocumentViewRes.ReportYear</span>
                            <select name="Year" class="form-control">
                                @for (int i = DateTime.Now.Year; i > 1989; i--)
                                {
                                    <option value="@i">@i.ToString()</option>
                                }
                            </select>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                        </label>
                    </div>
                }
                break;
            case "TestObjectsDocx":
                {
                    <div class="form-inline">
                        <label class="text-nowrap">
                            <span>@DocumentViewRes.ReportYear</span>
                            <select name="Year" class="form-control">
                                @for (int i = DateTime.Now.Year; i > 1989; i--)
                                {
                                    <option value="@i">@i.ToString()</option>
                                }
                            </select>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                        </label>
                    </div>
                }
                break;
            case "AnnualReviewDocx":
                {
                    <div class="form-inline">
                        <label class="text-nowrap">
                            <span>@DocumentViewRes.ReportYear</span>
                            <select name="Year" class="form-control">
                                @for (int i = DateTime.Now.Year; i > 1989; i--)
                                {
                                    <option value="@i">@i.ToString()</option>
                                }
                            </select>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                        </label>
                    </div>
                }
                break;
            case "SubsectorMunicipalityDocx":
                {
                    <div class="form-inline">
                        <label class="text-nowrap">
                            <span>@DocumentViewRes.SubsectorMunicipalityIsASpecialCaseAndShouldNotBeGeneratedByItself</span>
                            <br />
                            <span>@DocumentViewRes.SubsectorMunicipalityIsUsedWithinTheReEvaluation</span>
                        </label>
                    </div>
                }
                break;
            default:
                break;
        }
}

<table class="table table-striped table-condensed"></table>
