@using CSSPWebTools.Views.PolSourceSiteEffect.Resources;
@using CSSPWebTools.Models;
@using CSSPEnumsDLL.Enums;
@using CSSPEnumsDLL.Services;
@using CSSPModelsDLL.Models;
@using CSSPWebTools.Controllers;

@{
    //bool IsShowMap = (bool)ViewBag.IsShowMap;
    //TVAuthEnum tvAuth = (TVAuthEnum)ViewBag.TVAuth;
    int PolSourceSiteOrInfrastructureTVItemID = (int)ViewBag.PolSourceSiteOrInfrastructureTVItemID;
    List<PolSourceSiteEffectModel> polSourceSiteEffectModelList = (List<PolSourceSiteEffectModel>)ViewBag.PolSourceSiteEffectModelList;
    List<PolSourceSiteEffectTermModel> polSourceSiteEffectTermModelAllList = (List<PolSourceSiteEffectTermModel>)ViewBag.PolSourceSiteEffectTermModelAllList;
    List<PolSourceSiteModel> polSourceSiteModelList = (List<PolSourceSiteModel>)ViewBag.PolSourceSiteModelList;
    List<MWQMSiteModel> mwqmSiteModelList = (List<MWQMSiteModel>)ViewBag.MWQMSiteModelList;
}

<div class="panel panel-info">
    <div class="panel-heading">
        <div class="panel-title">
            <span class="h4">@PolSourceSiteEffectViewRes.EffectAnalyses</span>
        </div>
    </div>
    <div class="panel-body">
        <div class="PolSourceSiteEffectTermsTop">
            <button class="jbPolSourceSiteEffectTermsShowHideManage btn btn-default">@PolSourceSiteEffectViewRes.ManageEffectTerms</button>
            <div class="PolSourceSiteEffectTerms">
            </div>
        </div>
        <div class="PolSourceSiteEffectTop">
            <h4>@PolSourceSiteEffectViewRes.CanEffectMWQMSites</h4>
            <ul>
                @foreach (PolSourceSiteEffectModel polSourceSiteEffectModel in polSourceSiteEffectModelList)
                {
                    MWQMSiteModel mwqmSiteModel = mwqmSiteModelList.Where(c => c.MWQMSiteTVItemID == polSourceSiteEffectModel.MWQMSiteTVItemID).FirstOrDefault();

                    List<PolSourceSiteEffectModel> polSourceSiteEffectModelList2 = polSourceSiteEffectModelList.Where(c => c.MWQMSiteTVItemID == mwqmSiteModel.MWQMSiteTVItemID && c.PolSourceSiteOrInfrastructureTVItemID != polSourceSiteEffectModel.PolSourceSiteOrInfrastructureTVItemID).ToList();

                    string EffectTermIDs = polSourceSiteEffectModel.PolSourceSiteEffectTermIDs;

                    List<int> EffectTermIDList = new List<int>();
                    if (!string.IsNullOrWhiteSpace(EffectTermIDs))
                    {
                        EffectTermIDList = EffectTermIDs.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries).Select(c => int.Parse(c)).ToList();
                    }

                    List<PolSourceSiteEffectTermModel> polSourceSiteEffectTermModelAllList2 = (from c in polSourceSiteEffectTermModelAllList
                                                                                               from e in EffectTermIDList
                                                                                               where c.PolSourceSiteEffectTermID == e
                                                                                               select c).ToList();

                    <li>
                        <div>
                            <h3>@mwqmSiteModel.MWQMSiteTVText</h3>
                            <div class="PolSourceSiteEffect">
                                <h4>@PolSourceSiteEffectViewRes.EffectTermList</h4>
                                <p>
                                    @foreach (PolSourceSiteEffectTermModel polSourceSiteEffectTermModel in polSourceSiteEffectTermModelAllList)
                                    {
                                        bool IsChecked = EffectTermIDList.Contains(polSourceSiteEffectTermModel.PolSourceSiteEffectTermID);
                                        <label>
                                            <input name="EffectTerm" type="checkbox" @(IsChecked ? "checked=checked" : "") value="@polSourceSiteEffectTermModel.PolSourceSiteEffectTermID" />
                                            @if (ViewBag.Language == LanguageEnum.fr)
                                            {
                                                <span>@polSourceSiteEffectTermModel.EffectTermFR &nbsp;&nbsp;</span>
                                            }
                                            else
                                            {
                                                <span>@polSourceSiteEffectTermModel.EffectTermEN &nbsp;&nbsp;</span>
                                            }
                                        </label>
                                    }
                                </p>
                                <button class="jsPolSourceSiteEffectTermsSave btn btn-default" data-polsourcesiteeffectid="@polSourceSiteEffectModel.PolSourceSiteEffectID">@PolSourceSiteEffectViewRes.SaveEffectTerms</button>
                            </div>
                            @if (polSourceSiteEffectModelList2.Count > 0)
                            {
                            <div>
                                <span class="h4">@PolSourceSiteEffectViewRes.AlsoEffectedByPolSourceSites</span>
                                <ul class="list-unstyled">
                                    @foreach (PolSourceSiteEffectModel polSourceSiteEffectModel2 in polSourceSiteEffectModelList2)
                                    {
                                        PolSourceSiteModel polSourceSiteModel = polSourceSiteModelList.Where(c => c.PolSourceSiteTVItemID == polSourceSiteEffectModel2.PolSourceSiteOrInfrastructureTVItemID).FirstOrDefault();
                                        <li>
                                            <div>
                                                <p>@polSourceSiteModel.PolSourceSiteTVText</p>
                                            </div>
                                        </li>
                                    }

                                </ul>
                            </div>
                            }
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
