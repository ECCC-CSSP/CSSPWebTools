@using CSSPWebTools.Views.Shared.Resources;
@using CSSPWebTools.Views.TVItem.Resources;
@using CSSPWebTools.Controllers;
@using CSSPWebTools.Models;
@using CSSPEnumsDLL.Enums;
@using CSSPModelsDLL.Models;
@using CSSPEnumsDLL.Services;

@{
    URLModel urlModel = (URLModel)ViewBag.URLModel;
    TVItemController tvItemController = (TVItemController)ViewBag.TVItemController;
    List<TVItemStatModel> tvItemStatModelList = (List<TVItemStatModel>)ViewBag.TVItemStatModelList;
    TVItemMoreInfoInfrastructureModel tvItemMoreInfoInfrastructureModel = (TVItemMoreInfoInfrastructureModel)ViewBag.TVItemMoreInfoInfrastructureModel;
    TVItemMoreInfoMikeScenarioModel tvItemMoreInfoMikeScenarioModel = (TVItemMoreInfoMikeScenarioModel)ViewBag.TVItemMoreInfoMikeScenarioModel;
    TVItemMoreInfoPolSourceSiteModel tvItemMoreInfoPolSourceSiteModel = (TVItemMoreInfoPolSourceSiteModel)ViewBag.TVItemMoreInfoPolSourceSiteModel;
    TVItemMoreInfoMWQMRunModel tvItemMoreInfoMWQMRunModel = (TVItemMoreInfoMWQMRunModel)ViewBag.TVItemMoreInfoMWQMRunModel;
    TVItemMoreInfoMWQMSiteModel tvItemMoreInfoMWQMSiteModel = (TVItemMoreInfoMWQMSiteModel)ViewBag.TVItemMoreInfoMWQMSiteModel;
    TVItemModel tvItemModel = (TVItemModel)ViewBag.TVItemModel;
    TVItemMoreInfoFileModel tvItemMoreInfoFileModel = (TVItemMoreInfoFileModel)ViewBag.TVItemMoreInfoFileModel;
    BaseEnumService _BaseEnumService = new BaseEnumService(ViewBag.Language);

    int CountryCount = 0;
    int ProvinceCount = 0;
    int AreaCount = 0;
    int MikeScenarioCount = 0;
    int MunicipalityCount = 0;
    int InfrastructureCount = 0;
    int WasteWaterTreatmentPlantCount = 0;
    int LiftStationCount = 0;
    int SpillCount = 0;
    int SectorCount = 0;
    int SubsectorCount = 0;
    int MWQMRunCount = 0;
    int MWQMSampleCount = 0;
    int MWQMSiteCount = 0;
    int PolSourceSiteCount = 0;
    int BoxModelCount = 0;
    int VisualPlumeScenarioCount = 0;

    if (tvItemStatModelList != null)
    {
        foreach (TVItemStatModel tvItemStatModel in tvItemStatModelList)
        {
            switch (tvItemStatModel.TVType)
            {
                case TVTypeEnum.Area:
                    {
                        AreaCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.BoxModel:
                    {
                        BoxModelCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Country:
                    {
                        CountryCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Infrastructure:
                    {
                        InfrastructureCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.LiftStation:
                    {
                        LiftStationCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.MWQMRun:
                    {
                        MWQMRunCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.MWQMSite:
                    {
                        MWQMSiteCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.MWQMSiteSample:
                    {
                        MWQMSampleCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.MikeScenario:
                    {
                        MikeScenarioCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Municipality:
                    {
                        MunicipalityCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.PolSourceSite:
                    {
                        PolSourceSiteCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Province:
                    {
                        ProvinceCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Sector:
                    {
                        SectorCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Spill:
                    {
                        SpillCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.Subsector:
                    {
                        SubsectorCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.VisualPlumesScenario:
                    {
                        VisualPlumeScenarioCount = tvItemStatModel.ChildCount;
                    }
                    break;
                case TVTypeEnum.WasteWaterTreatmentPlant:
                    {
                        WasteWaterTreatmentPlantCount = tvItemStatModel.ChildCount;
                    }
                    break;
                default:
                    break;
            }
        }
    }

}


<li>
    @switch (tvItemModel.TVType)
    {
        case TVTypeEnum.Area:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Municipalities (<b>@MunicipalityCount</b>)</span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.Sectors (<b>@SectorCount</b>)</span>
                    <span>@TVItemViewRes.Subsectors (<b>@SubsectorCount</b>)</span>
                    <span>@TVItemViewRes.Samples (<b>@MWQMSampleCount</b>)</span>
                    <span>@TVItemViewRes.MWQMSites (<b>@MWQMSiteCount</b>)</span>
                    <span>@TVItemViewRes.MWQMRuns (<b>@MWQMRunCount</b>)</span>
                    <span>@TVItemViewRes.PolSourceSites (<b>@PolSourceSiteCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.Country:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Provinces (<b>@ProvinceCount</b>)</span>
                    <span>@TVItemViewRes.Municipalities (<b>@MunicipalityCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.Areas (<b>@AreaCount</b>)</span>
                    <span>@TVItemViewRes.Sectors (<b>@SectorCount</b>)</span>
                    <span>@TVItemViewRes.Subsectors (<b>@SubsectorCount</b>)</span>
                    <span>@TVItemViewRes.Samples (<b>@MWQMSampleCount</b>)</span>
                    <span>@TVItemViewRes.MWQMSites (<b>@MWQMSiteCount</b>)</span>
                    <span>@TVItemViewRes.MWQMRuns (<b>@MWQMRunCount</b>)</span>
                    <span>@TVItemViewRes.PolSourceSites (<b>@PolSourceSiteCount</b>)</span>
                    <span>@TVItemViewRes.MikeScenarios (<b>@MikeScenarioCount</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@VisualPlumeScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.File:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Description</b> - @(string.IsNullOrWhiteSpace(tvItemMoreInfoFileModel.FullDesc) ? TVItemViewRes.Empty : tvItemMoreInfoFileModel.FullDesc)</span>
                </span>
                if (!string.IsNullOrWhiteSpace(tvItemMoreInfoFileModel.Parameters))
                {
                    <br />
                    <span><b>@TVItemViewRes.Parameters</b> - @(tvItemMoreInfoFileModel.Parameters)</span>
                }
            }
            break;
        case TVTypeEnum.Infrastructure:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Info:</b></span>
                    <span>@TVItemViewRes.PercentageTotalFlow (<b>@tvItemMoreInfoInfrastructureModel.PercOfTotalFlow %</b>)</span>
                    <span>@TVItemViewRes.AverageFlow (<b>@tvItemMoreInfoInfrastructureModel.AverageFlow_m3_day m<sup>3</sup>/day</b>)</span>
                    <span>@TVItemViewRes.PeakFlow (<b>@tvItemMoreInfoInfrastructureModel.PeakFlow_m3_day m<sup>3</sup>/day</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@tvItemMoreInfoInfrastructureModel.BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@tvItemMoreInfoInfrastructureModel.VPScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.MikeScenario:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.StartDateAndTime</b> (@tvItemMoreInfoMikeScenarioModel.MikeScenarioStartDateTime_Local.ToString("yyyy MMMM dd - HH:mm"))</span>
                    <span><b>@TVItemViewRes.EndDateAndTime</b> (@tvItemMoreInfoMikeScenarioModel.MikeScenarioEndDateTime_Local.ToString("yyyy MMMM dd - HH:mm"))</span>
                    <span><b>@TVItemViewRes.WindSpeed_km_h</b> (@tvItemMoreInfoMikeScenarioModel.WindSpeed_km_h)</span>
                    <span><b>@TVItemViewRes.WindDirection_deg</b> (@tvItemMoreInfoMikeScenarioModel.WindDirection_deg)</span>
                    <span><b>@TVItemViewRes.DecayFactor_per_day</b> (@tvItemMoreInfoMikeScenarioModel.DecayFactor_per_day)</span>
                    <span><b>@TVItemViewRes.DecayIsConstant</b> (@tvItemMoreInfoMikeScenarioModel.DecayIsConstant)</span>
                    <span><b>@TVItemViewRes.DecayFactorAmplitude</b> (@tvItemMoreInfoMikeScenarioModel.DecayFactorAmplitude)</span>
                    <span><b>@TVItemViewRes.ResultFrequency_min</b> (@tvItemMoreInfoMikeScenarioModel.ResultFrequency_min)</span>
                    <span><b>@TVItemViewRes.AmbientTemperature_C</b> (@tvItemMoreInfoMikeScenarioModel.AmbientTemperature_C)</span>
                    <span><b>@TVItemViewRes.AmbientSalinity_PSU</b> (@tvItemMoreInfoMikeScenarioModel.AmbientSalinity_PSU)</span>
                    <span><b>@TVItemViewRes.ManningNumber</b> (@tvItemMoreInfoMikeScenarioModel.ManningNumber)</span>
                </span>

                <div class="paraBlock">
                    <span class="h4">@TVItemViewRes.PollutionSourceIncluded</span><br />
                    @foreach (TVItemMikeSourceModel tvItemMikeSourceModel in tvItemMoreInfoMikeScenarioModel.TVItemMikeSourceModelList)
                    {
                        <ul class="list-unstyled">
                            <li>
                                <ul class="list-unstyled blockMargin">
                                    <li>
                                        <span class="glyphicon glyphicon-triangle-right"></span><span>@TVItemViewRes.SourceName (<b>@tvItemMikeSourceModel.MikeSourceTVText</b>)</span>
                                        <span><b>@TVItemViewRes.IsContinuous</b> (@tvItemMikeSourceModel.IsContinuous)</span>
                                    </li>
                                    <li>
                                        @if (tvItemMikeSourceModel.MikeSourceStartEndModelList != null)
                                        {
                                            foreach (MikeSourceStartEndModel mikeSourceStartEndModel in tvItemMikeSourceModel.TVItemMikeSourceStartEndModelList)
                                            {
                                                <div class="blockMargin">
                                                    <label>@TVItemViewRes.PollutionDateAndTime</label>
                                                    <ul class="list-unstyled blockMargin">
                                                        <li>
                                                            @if (!tvItemMikeSourceModel.IsContinuous)

                                                            {

                                                                <span><b>@TVItemViewRes.Start</b></span>
                                                                <span> (@mikeSourceStartEndModel.StartDateAndTime_Local.ToString("yyyy MMMM dd - HH:mm"))</span>
                                                            }
                                                            <span><b>@TVItemViewRes.Discharge @Html.Raw(UnitViewRes.m3PerDay)</b> (@mikeSourceStartEndModel.SourceFlowStart_m3_day.ToString("F1"))</span>
                                                            <span><b>@TVItemViewRes.Discharge @Html.Raw(UnitViewRes.m3PerSecond)</b> (@((mikeSourceStartEndModel.SourceFlowStart_m3_day / 3600 / 24).ToString("F5")))</span>
                                                            <span><b>@TVItemViewRes.FC @UnitViewRes.FCPer100ml</b> (@mikeSourceStartEndModel.SourcePollutionStart_MPN_100ml)</span>
                                                            <span><b>@TVItemViewRes.Salinity @UnitViewRes.PSU</b> (@mikeSourceStartEndModel.SourceSalinityStart_PSU.ToString("F1"))</span>
                                                            <span><b>@TVItemViewRes.Temperature @UnitViewRes.Celcius_abbr</b> (@mikeSourceStartEndModel.SourceTemperatureStart_C.ToString("F1"))</span>
                                                        </li>



                                                        @if (!tvItemMikeSourceModel.IsContinuous)
                                                        {
                                                            <li>
                                                                <div>
                                                                    <span><b>@TVItemViewRes.End</b></span> <span>(@mikeSourceStartEndModel.EndDateAndTime_Local.ToString("yyyy MMMM dd - HH:mm"))</span>
                                                                    <span><b>@TVItemViewRes.Discharge @Html.Raw(UnitViewRes.m3PerDay)</b> (@mikeSourceStartEndModel.SourceFlowEnd_m3_day.ToString("F1"))</span>
                                                                    <span><b>@TVItemViewRes.Discharge @Html.Raw(UnitViewRes.m3PerSecond)</b> (@((mikeSourceStartEndModel.SourceFlowEnd_m3_day / 3600 / 24).ToString("F5")))</span>
                                                                    <span><b>@TVItemViewRes.FC @UnitViewRes.FCPer100ml</b> (@mikeSourceStartEndModel.SourcePollutionEnd_MPN_100ml)</span>
                                                                    <span><b>@TVItemViewRes.Salinity @UnitViewRes.PSU</b> (@mikeSourceStartEndModel.SourceSalinityEnd_PSU.ToString("F1"))</span>
                                                                    <span><b>@TVItemViewRes.Temperature @UnitViewRes.Celcius_abbr</b> (@mikeSourceStartEndModel.SourceTemperatureEnd_C.ToString("F1"))</span>
                                                                </div>
                                                            </li>
                                                        }

                                                    </ul>
                                                </div>
                                            }
                                        }
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    }
                </div>
            }
            break;
        case TVTypeEnum.Municipality:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.Spill (<b>@SpillCount</b>)</span>
                    <span>@TVItemViewRes.MikeScenarios (<b>@MikeScenarioCount</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@VisualPlumeScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.PolSourceSite:
            {
                <span>
                    <span><b>@TVItemViewRes.ObservationDate:</b></span>
                    <span>@Html.Raw(tvItemMoreInfoPolSourceSiteModel.ObsDateTime_Local)</span>
                </span>
                <br />
                <br />
                if (!string.IsNullOrWhiteSpace(tvItemMoreInfoPolSourceSiteModel.FullDesc))
                {
                    <span>
                        <span><b>@TVItemViewRes.WrittenDescription:</b></span>
                        <span>@Html.Raw(tvItemMoreInfoPolSourceSiteModel.FullDesc)</span>
                    </span>
                    <br />
                    <br />
                }
                <span><b>@TVItemViewRes.NumberOfIssues :</b> @tvItemMoreInfoPolSourceSiteModel.IssuesTVTextList.Count()</span><br /><br />
                foreach (string IssuesTVText in tvItemMoreInfoPolSourceSiteModel.IssuesTVTextList)
                {
                    <span>
                        <span><b>@TVItemViewRes.SelectedDescription:</b></span>
                        <span>@Html.Raw(IssuesTVText)</span>
                    </span>
                    <br />
                    <br />
                }
            }
            break;
        case TVTypeEnum.Province:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Municipalities (<b>@MunicipalityCount</b>)</span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.Areas (<b>@AreaCount</b>)</span>
                    <span>@TVItemViewRes.Sectors (<b>@SectorCount</b>)</span>
                    <span>@TVItemViewRes.Subsectors (<b>@SubsectorCount</b>)</span>
                    <span>@TVItemViewRes.Samples (<b>@MWQMSampleCount</b>)</span>
                    <span>@TVItemViewRes.MWQMSites (<b>@MWQMSiteCount</b>)</span>
                    <span>@TVItemViewRes.MWQMRuns (<b>@MWQMRunCount</b>)</span>
                    <span>@TVItemViewRes.PolSourceSites (<b>@PolSourceSiteCount</b>)</span>
                    <span>@TVItemViewRes.MikeScenarios (<b>@MikeScenarioCount</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@VisualPlumeScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.Sector:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Municipalities (<b>@MunicipalityCount</b>)</span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.Subsectors (<b>@SubsectorCount</b>)</span>
                    <span>@TVItemViewRes.Samples (<b>@MWQMSampleCount</b>)</span>
                    <span>@TVItemViewRes.MWQMSites (<b>@MWQMSiteCount</b>)</span>
                    <span>@TVItemViewRes.MWQMRuns (<b>@MWQMRunCount</b>)</span>
                    <span>@TVItemViewRes.PolSourceSites (<b>@PolSourceSiteCount</b>)</span>
                    <span>@TVItemViewRes.MikeScenarios (<b>@MikeScenarioCount</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@VisualPlumeScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.Subsector:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Municipalities (<b>@MunicipalityCount</b>)</span>
                    <span>@TVItemViewRes.WWTP (<b>@WasteWaterTreatmentPlantCount</b>)</span>
                    <span>@TVItemViewRes.LiftStations (<b>@LiftStationCount</b>)</span>
                    <span>@TVItemViewRes.Samples (<b>@MWQMSampleCount</b>)</span>
                    <span>@TVItemViewRes.MWQMSites (<b>@MWQMSiteCount</b>)</span>
                    <span>@TVItemViewRes.MWQMRuns (<b>@MWQMRunCount</b>)</span>
                    <span>@TVItemViewRes.PolSourceSites (<b>@PolSourceSiteCount</b>)</span>
                    <span>@TVItemViewRes.MikeScenarios (<b>@MikeScenarioCount</b>)</span>
                    <span>@TVItemViewRes.BoxModels (<b>@BoxModelCount</b>)</span>
                    <span>@TVItemViewRes.VPScenarios (<b>@VisualPlumeScenarioCount</b>)</span>
                </span>
            }
            break;
        case TVTypeEnum.MWQMRun:
            {
                <div class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Precipitation</b> <span title="@UnitViewRes.Millimeters">(@UnitViewRes.Millimeters_abr)</span>: </span>
                    <span>@TVItemViewRes.Day </span>
                    <span class="text-nowrap">(0) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay0_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay0_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-1) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay1_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay1_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-2) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay2_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay2_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-3) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay3_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay3_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-4) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay4_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay4_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-5) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay5_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay5_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-6) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay6_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay6_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-7) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay7_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay7_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-8) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay8_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay8_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-9) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay9_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay9_mm).ToString("F0"))))</b>]</span>
                    <span class="text-nowrap">(-10) [<b>@((tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay10_mm == null ? "" : ((double)tvItemMoreInfoMWQMRunModel.MWQMRunModel.RainDay10_mm).ToString("F0"))))</b>]</span>
                    <br />
                    <ul class="list-inline moreInfo2">
                        @foreach (MWQMSampleModel mwqmSampleModel in tvItemMoreInfoMWQMRunModel.MWQMSampleModelList)
                        {
                            <li>
                                <span class="@(mwqmSampleModel.FecCol_MPN_100ml > 42 ? (mwqmSampleModel.FecCol_MPN_100ml > 259 ? "bg-noDepuration" : "bg-failed") : "bg-good")">
                                    <a class="MWQMRunMoreInfo" data-tvitemid="@mwqmSampleModel.MWQMSiteTVItemID" href="@tvItemController.CreateHashURL(mwqmSampleModel.MWQMSiteTVItemID)">@mwqmSampleModel.MWQMSiteTVText (@mwqmSampleModel.FecCol_MPN_100ml)</a>
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            }
            break;
        case TVTypeEnum.MWQMSite:
            {
                var classname = "brdr-good";
                var title = TVItemViewRes.Good;
                if (tvItemMoreInfoMWQMSiteModel.Coloring == "noDepuration")
                {
                    classname = "brdr-noDepuration";
                    title = TVItemViewRes.NoDepuration;
                }
                else if (tvItemMoreInfoMWQMSiteModel.Coloring == "failed")
                {
                    classname = "brdr-failed";
                    title = TVItemViewRes.Failed;
                }
                else if (tvItemMoreInfoMWQMSiteModel.Coloring == "passed")
                {
                    classname = "brdr-passed";
                    title = TVItemViewRes.Passed;
                }
                else if (tvItemMoreInfoMWQMSiteModel.Coloring == "notEnoughData")
                {
                    classname = "brdr-notEnoughData";
                    title = TVItemViewRes.NotEnoughData;
                }
                else if (tvItemMoreInfoMWQMSiteModel.Coloring == "noData")
                {
                    classname = "brdr-noData";
                    title = TVItemViewRes.NoData;
                }
                else
                {
                    classname = "brdr-noData";
                    title = TVItemViewRes.NoData;
                }
                <p><span class="h4">@TVItemViewRes.LatestClassification:</span> @(_BaseEnumService.GetEnumText_MWQMSiteLatestClassificationEnum(tvItemMoreInfoMWQMSiteModel.MWQMSiteLatestClassification))</p>
                <p class="@classname  moreInfo-NamesValues" title="@title">

                    <span>
                        <b>
                            @tvItemMoreInfoMWQMSiteModel.Letter
                        </b>
                    </span>


                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Samples (<b>@string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.MWQMSampleCount)</b>)</span>
                    <span>
                        @TVItemViewRes.DataSet (<b>
                            @string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.SampMinYear) -
                            @string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.SampMaxYear)
                        </b>)
                    </span>
                    <span>
                        @TVItemViewRes.StatsPeriod (<b>
                            @string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.StatMinYear) -
                            @string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.StatMaxYear)
                        </b>)
                    </span>
                    <span>@TVItemViewRes.UNSS (<b>@string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.SampCount)</b>)</span>
                    <span>@TVItemViewRes.MinFC (<b>@(tvItemMoreInfoMWQMSiteModel.MinFC < 2.0f ? "<2" : string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.MinFC))</b>)</span>
                    <span>@TVItemViewRes.MaxFC (<b>@(tvItemMoreInfoMWQMSiteModel.MaxFC < 2.0f ? "<2" : string.Format("{0:F0}", tvItemMoreInfoMWQMSiteModel.MaxFC))</b>)</span>
                    <span>@TVItemViewRes.GeometricMean (<b>@(tvItemMoreInfoMWQMSiteModel.GeoMean < 2.0f ? "<2" : string.Format("{0:F1}", tvItemMoreInfoMWQMSiteModel.GeoMean))</b>)</span>
                    <span>@TVItemViewRes.Median (<b>@(tvItemMoreInfoMWQMSiteModel.Median < 2.0f ? "<2" : string.Format("{0:F1}", tvItemMoreInfoMWQMSiteModel.Median))</b>)</span>
                    <span>@TVItemViewRes.P90 (<b>@string.Format("{0:F1}", tvItemMoreInfoMWQMSiteModel.P90)</b>)</span>
                    <span>@TVItemViewRes.PSFCOver43 (<b>@string.Format("{0:F1}%", tvItemMoreInfoMWQMSiteModel.PercOver43)</b>)</span>
                    <span>@TVItemViewRes.PSFCOver260 (<b>@string.Format("{0:F1}%", tvItemMoreInfoMWQMSiteModel.PercOver260)</b>)</span>
                </p>
            }
            break;
        default:
            {
                <span class="moreInfo-NamesValues">
                    <span><b>@TVItemViewRes.Stats:</b></span>
                    <span>@TVItemViewRes.Empty</span>
                </span>
            }
            break;
    }
</li>

