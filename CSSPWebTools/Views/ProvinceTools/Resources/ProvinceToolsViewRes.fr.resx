<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADocumentWillBeCreatedShowingTheMissingPrecip" xml:space="preserve">
    <value>A document will be created showing the missing precipitation (fr)</value>
  </data>
  <data name="AForApproved" xml:space="preserve">
    <value>A = Approved (fr)</value>
  </data>
  <data name="CAForConditionallyApproved" xml:space="preserve">
    <value>CA = Conditionally Approved (fr)</value>
  </data>
  <data name="ClassificationRelatedTools" xml:space="preserve">
    <value>Classification Related Tools (fr)</value>
  </data>
  <data name="ClickTheButtonBelowToGenerateClassificatonForCSSPWebToolsVisualization" xml:space="preserve">
    <value>Click the button below to generate classification for CSSPWebTools visualization (fr)</value>
  </data>
  <data name="ClimateSitePrecipitationRelatedTools" xml:space="preserve">
    <value>Climate site precipitation related tools (fr)</value>
  </data>
  <data name="CRForConditionallyRestricted" xml:space="preserve">
    <value>CR = Conditionally Restricted (fr)</value>
  </data>
  <data name="DownloadTheFileToYourComputer" xml:space="preserve">
    <value>Download the file to your computer (fr)</value>
  </data>
  <data name="DrawRequiredPathsUnderEachSubsectorToRepresentClassification" xml:space="preserve">
    <value>Draw required paths under each subsector to represent classification (fr)</value>
  </data>
  <data name="FillRunPrecipByClimateSitePriorityForYear" xml:space="preserve">
    <value>Fill run precip by climate site priority for year (fr)</value>
  </data>
  <data name="FindMissingPrecipForProvince" xml:space="preserve">
    <value>Find missing precip for province (fr)</value>
  </data>
  <data name="GenerateClassificatonForCSSPWebToolsVisualization" xml:space="preserve">
    <value>Generate classificaton for CSSPWebTools visualization (fr)</value>
  </data>
  <data name="GenerateProvincePollutionSourceSitesForInputTool" xml:space="preserve">
    <value>Generate Province Pollution Source Sites For Input Tool (fr)</value>
  </data>
  <data name="GetAllPrecipitationForYear" xml:space="preserve">
    <value>Get all precipitation for year (fr)</value>
  </data>
  <data name="MakeSureYouSaveYourClassificationPolygonsKMLFileUnderProvinceFileTab" xml:space="preserve">
    <value>Make sure you save your classification polygons KML file under the province file tab (fr)</value>
  </data>
  <data name="PForProhibited" xml:space="preserve">
    <value>P = Prohibited (fr)</value>
  </data>
  <data name="PlaceholderForMore" xml:space="preserve">
    <value>Placeholder for more (fr)</value>
  </data>
  <data name="PollutionSourceSitesRelatedTools" xml:space="preserve">
    <value>Pollution Source Sites Related Tools (fr)</value>
  </data>
  <data name="ReplacedTheFileOnTheCSSPWebToolsWithTheChanges" xml:space="preserve">
    <value>Replaced the file on the CSSPWebTools with the changes (fr)</value>
  </data>
  <data name="RForRestricted" xml:space="preserve">
    <value>R = Restricted (fr)</value>
  </data>
  <data name="SomeOfTheseTasksCanTakeALongTime" xml:space="preserve">
    <value>Some of these tasks can take a long time (fr)</value>
  </data>
  <data name="Steps" xml:space="preserve">
    <value>Steps (fr)</value>
  </data>
  <data name="UsingTheClassificationInputsKMLFileFoundUnderProvinceFileTab" xml:space="preserve">
    <value>Using the classification inputs KML file found under province file tab (fr)</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Working (fr)</value>
  </data>
  <data name="ClickTheButtonBelowToGenerateGroupingsBewteenMWQMSitesAndPolSourceSitesForCSSPWebToolsVisualization" xml:space="preserve">
    <value>Click the button below to generate groupings bewteen MWQM Sites and Pollution Source Sites for CSSPWebTools Visualization (fr)</value>
  </data>
  <data name="DrawRequiredPolygonsUnderEachSubsectorToGroupTheMWQMSitesAndPolSourceSites" xml:space="preserve">
    <value>Draw required polygons under each subsector to group the MWQM Sites and Pollution Sources Sites (fr)</value>
  </data>
  <data name="GenerateLinksBetweenMWQMSitesAndPolSourceSitesForCSSPWebToolsVisualization" xml:space="preserve">
    <value>Generate links bewteen MWQM Sites and Pollution Source Sites for CSSPWebTools Visualization (fr)</value>
  </data>
  <data name="MWQMSitePolSourceSiteGroupingRelatedTools" xml:space="preserve">
    <value>MWQM Site and Pollution Source Site Grouping Related Tools (fr)</value>
  </data>
  <data name="YouCanDrawAsManyAsIsNeeded" xml:space="preserve">
    <value>You can draw as many as is needed (fr)</value>
  </data>
  <data name="CreateShellOfClassificationInputsKML" xml:space="preserve">
    <value>Create shell of Classification Inputs KML (fr)</value>
  </data>
  <data name="CreateShellOfGroupingInputsKML" xml:space="preserve">
    <value>Create shell of Grouping Inputs KML (fr)</value>
  </data>
  <data name="CreateMWQMSitesAndPolSourceSitesKML" xml:space="preserve">
    <value>Create MWQM Sites and PolSourceSites KML (fr)</value>
  </data>
  <data name="TheFileAboveIsAnExportAsKMLFromArcGISProvincialClassificationPolygons" xml:space="preserve">
    <value>The file above is an export as KML from Arc GIS provincial classification polygons (fr)</value>
  </data>
  <data name="ADocumentWillBeCreatedShowingTheMissingDischarge" xml:space="preserve">
    <value>A document will be created showing the missing discharge (fr)</value>
  </data>
  <data name="FillRunDischargeByHydrometricSitePriorityForYear" xml:space="preserve">
    <value>Fill run discharge by hydrometric site priority for year (fr)</value>
  </data>
  <data name="FindMissingDischargeForProvince" xml:space="preserve">
    <value>Find missing discharge for province (fr)</value>
  </data>
  <data name="GetAllDischargeForYear" xml:space="preserve">
    <value>Get all discharges for year (fr)</value>
  </data>
  <data name="HydrometricSiteDischargeRelatedTools" xml:space="preserve">
    <value>Hydrometric site discharge related tools (fr)</value>
  </data>
  <data name="GenerateClassificatonKMLFileForQuickChecking" xml:space="preserve">
    <value>Generate classificaton KML file for quick checking</value>
  </data>
  <data name="GenerateStatisticsNormalDryWetKMLAndCSV" xml:space="preserve">
    <value>Créer statistics (Normale, Sec, Pluie) (KML and CSV)</value>
  </data>
  <data name="StatisticsNormalDryWetKMLAndCSV" xml:space="preserve">
    <value>Statistiques (Normale, Sec, Pluie) (KML and CSV)</value>
  </data>
</root>